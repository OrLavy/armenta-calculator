{"version":3,"sources":["serviceWorker.ts","theme/Theme.tsx","components/structure/Page.tsx","components/structure/ContentFitting.tsx","components/forms/CalculatorForm.tsx","pages/CalculatorPage.tsx","components/header/Header.tsx","App.tsx","AppWrapper.tsx","index.tsx","assets/armenta_logo.jpeg"],"names":["Boolean","window","location","hostname","match","baseTheme","responsiveFontSizes","createMuiTheme","palette","primary","main","secondary","background","typography","overrides","MuiPaper","root","MuiTypography","colorPrimary","MuiLink","useStyles","makeStyles","theme","page","height","width","maxWidth","boxSizing","paddingBottom","Page","React","memo","props","classes","children","className","contentFitter","ContentFitting","others","textField","actionButton","transition","backgroundColor","light","color","getContrastText","CalculatorForm","useForm","register","handleSubmit","errors","useState","hasResult","setHasResult","result","setResult","calculatedSavings","useCallback","formData","cullinRate","parseInt","herdSize","mastitisPrevalenceValue","rawMilkPrice","infectedCows","Math","round","totalLoss","submit","calculatedResult","farmerWillSaveMoney","onSubmit","fomData","style","TextField","autoComplete","InputLabelProps","pointerEvents","name","label","title","variant","type","required","inputRef","fullWidth","defaultValue","InputProps","startAdornment","InputAdornment","position","Button","display","flexDirection","alignItems","Typography","green","red","toLocaleString","CalculatorPage","fontWeight","appBar","paddingTop","zIndex","drawer","padding","spacing","toolbar","paddingRight","paddingLeft","margin","justifyContent","justifyItems","logo","link","marginLeft","Header","AppBar","data-testid","Toolbar","to","src","Logo","alt","mainWrapper","minHeight","appMain","headerSeparator","App","AppWrapper","StylesProvider","injectFirst","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"iLAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qDCJOC,EAAYC,IACvBC,IAAe,CACbC,QAAS,CAEPC,QAAS,CAAEC,KAAM,WACjBC,UAAW,CAAED,KAAM,WACnBE,WAAY,IAMdC,WAAY,GAGZC,UAAW,CACTC,SAAU,CACRC,KAAM,IAIRC,cAAe,CACbC,aAAc,IAIhBC,QAAS,CACPH,KAAM,QCpCRI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,OACRC,MAAO,cACPC,SAAU,OACVC,UAAW,aACXC,cAAe,WAINC,EAAOC,IAAMC,MAAa,SAACC,GACtC,IAAMC,EAAUb,IACRc,EAAaF,EAAbE,SACR,OAAO,yBAAKC,UAAWF,EAAQV,MAAOW,M,QCdlCd,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCc,cAAe,CACbZ,OAAQ,OACRC,MAAO,cACPC,SAAU,YAIDW,EAAiBP,IAAMC,MAGlC,SAACC,GACD,IAAMC,EAAUb,IACRc,EAAwBF,EAAxBE,SAAaI,EAFV,YAEqBN,EAFrB,cAGX,OACE,uCAAKG,UAAWF,EAAQG,eAAmBE,GACxCJ,M,oECCDd,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiB,UAAW,CACT,sBAAuB,IAIzBC,aAAc,CACZC,WAAY,kDACZ,UAAW,CACTC,gBAAiBpB,EAAMd,QAAQG,UAAUgC,MACzCC,MAAOtB,EAAMd,QAAQqC,gBAAgBvB,EAAMd,QAAQG,UAAUgC,aAStDG,EAAiBhB,IAAMC,MAAa,SAACC,GAChD,IAAMC,EAAUb,IAD0C,EAEf2B,cAAnCC,EAFkD,EAElDA,SAAUC,EAFwC,EAExCA,aAFwC,KAE1BC,OAEEC,oBAAS,IAJe,mBAInDC,EAJmD,KAIxCC,EAJwC,OAK9BF,mBAAS,GALqB,mBAKnDG,EALmD,KAK3CC,EAL2C,KAOpDC,EAAoBC,uBAAY,SAACC,GAErC,IAAMC,EAAaC,SAASF,EAASC,YAC/BE,EAAWD,SAASF,EAASG,UAC7BC,EAA0BF,SAASF,EAASI,yBAC5CC,EAAeH,SAASF,EAASK,cAGjCC,EAAeC,KAAKC,MAAOJ,EAA0B,IAAOD,GAK5DM,EADyB,IAHZF,KAAKC,MAAOP,EAAa,IAAOE,GACN,IAAfG,EAAqB,IACLD,EAW9C,OAFgBI,GAFKA,EADiB,GAAZA,GAFuB,IADvBF,KAAKC,MAAMF,EAAe,IAEC,QAOpD,IAEGI,EAASX,uBACb,SAACC,GACC,IAAMW,EAAmBb,EAAkBE,GAE3CL,GAAa,GACbE,EAAUc,KAEZ,CAACb,IAGGc,EAAsBhB,EAAS,EAErC,OACE,oCACE,0BACEiB,SAAUtB,GAAa,SAACuB,GAAD,OAAaJ,EAAOI,MAC3CC,MAAO,CACL/C,SAAU,OAEVD,MAAO,SAIT,kBAACiD,EAAA,EAAD,CACEC,aAAc,MACdC,gBAAiB,CAAEH,MAAO,CAAEI,cAAe,SAC3CC,KAAM,WACNC,MAAO,eACPC,MAAO,4BACPC,QAAS,WACTC,KAAM,SACNC,UAAQ,EACRC,SAAUpC,EACVqC,WAAS,EACTlD,UAAWF,EAAQM,YAErB,6BACA,6BAGA,kBAACmC,EAAA,EAAD,CACEC,aAAc,MACdC,gBAAiB,CAAEH,MAAO,CAAEI,cAAe,SAC3CC,KAAM,0BACNC,MAAO,4BACPC,MAAO,4BACPC,QAAS,WACTC,KAAM,SACNI,aApFgC,KAqFhCH,UAAQ,EACRC,SAAUpC,EACVqC,WAAS,EACTlD,UAAWF,EAAQM,UACnBgD,WAAY,CACVC,eAAgB,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SAAzB,QAGpB,6BACA,6BAGA,kBAAChB,EAAA,EAAD,CACEC,aAAc,MACdC,gBAAiB,CAAEH,MAAO,CAAEI,cAAe,SAC3CC,KAAM,aACNC,MAAO,eACPC,MAAO,eACPC,QAAS,WACTC,KAAM,SACNI,aAxGmB,EAyGnBH,UAAQ,EACRC,SAAUpC,EACVqC,WAAS,EACTlD,UAAWF,EAAQM,UACnBgD,WAAY,CACVC,eAAgB,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SAAzB,QAGpB,6BACA,6BAGA,kBAAChB,EAAA,EAAD,CACEC,aAAc,MACdC,gBAAiB,CAAEH,MAAO,CAAEI,cAAe,SAC3CC,KAAM,eACNC,MAAO,uBACPC,MAAO,uBACPC,QAAS,WACTC,KAAM,SACNI,aA5HqB,EA6HrBH,UAAQ,EACRC,SAAUpC,EACVqC,WAAS,EACTlD,UAAWF,EAAQM,UACnBgD,WAAY,CACVC,eAAgB,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SAAzB,aAGpB,6BACA,6BAGA,kBAACC,EAAA,EAAD,CACExD,UAAWF,EAAQO,aACnByC,QAAS,WACTI,WAAS,EACTH,KAAM,UAJR,qBASC9B,GACC,yBACEqB,MAAO,CACLmB,QAAS,OACTC,cAAe,SACfC,WAAY,WAGd,6BACA,6BACA,kBAACC,EAAA,EAAD,CAAYd,QAAS,KAAMrC,MAAO,aAAlC,uBAGA,kBAACmD,EAAA,EAAD,CACEd,QAAS,KACTR,MAAO,CAAE7B,MAAO0B,EAAsB0B,IAAM,KAAOC,IAAI,OAFzD,UAIK3C,EAAO4C,wBCjMXC,EAAiBrE,IAAMC,MAAa,SAACC,GAChD,OACE,kBAACH,EAAD,KACE,kBAACQ,EAAD,CACEoC,MAAO,CACLmB,QAAS,OACTC,cAAe,SACfC,WAAY,WAGd,kBAACC,EAAA,EAAD,CACEd,QAAS,KACTrC,MAAO,YACP6B,MAAO,CAAE2B,WAAY,SAHvB,0BAOA,6BACA,kBAACtD,EAAD,W,2CCdF1B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+E,OAAQ,CACN3D,gBAAiB,OACjBlB,OAAO,GAAD,OLHuB,EKGvB,OACN8E,WAAY,SACZ1E,cAAe,SACfD,UAAW,aAEX4E,OAAQjF,EAAMiF,OAAOC,OAAS,EAE9BC,QAASnF,EAAMoF,QAAQ,IAEzBC,QAAS,CACPC,aAAc,EACdC,YAAa,EAGbC,OAAQ,OACRrF,MAAO,MACPC,SAAU,MACVkE,QAAS,OACTmB,eAAgB,SAChBC,aAAc,UAEhBC,KAAM,CAEJxF,MAAO,yBAETyF,KAAM,CACJtE,MAAO,UACPuE,WAAY,GACZ1E,WAAY,yBACZ,UAAW,CACTG,MAnCqB,gBAwCdwE,EAAStF,IAAMC,MAAa,SAACC,GACxC,IAAMC,EAAUb,IAEhB,OACE,kBAACiG,EAAA,EAAD,CAAQ3B,SAAS,QAAQ4B,cAAY,SAASnF,UAAWF,EAAQoE,QAC/D,kBAACkB,EAAA,EAAD,CAASpF,UAAWF,EAAQ0E,SAC1B,kBAAC,IAAD,CACEa,GAAG,IACH/C,MAAO,CACLmB,QAAS,OACTmB,eAAgB,WAGlB,yBAAK5E,UAAWF,EAAQgF,KAAMQ,IAAKC,IAAMC,IAAI,kBCvDjDvG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsG,YAAa,CAEXC,UAAU,eAAD,ONCoB,EMDpB,QAGTjC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdgC,QAAS,CACPtG,OAAQ,OACRE,SAAU,MACVC,UAAW,aACX8E,QAASnF,EAAMoF,QAAQ,IAGzBqB,gBAAiB,CACfvG,OAAO,GAAD,ONduB,EMcvB,YAoBKwG,EAhBHlG,IAAMC,MAAK,WACrB,IAAME,EAAUb,IAEhB,OACE,oCACE,kBAACgG,EAAD,MACA,yBAAKjF,UAAWF,EAAQ8F,kBACxB,yBAAK5F,UAAWF,EAAQ2F,aACtB,0BAAMzF,UAAWF,EAAQ6F,SACvB,kBAAC3B,EAAD,Y,2BC1BG8B,EAAanG,IAAMC,MAAa,SAACC,GAC5C,OACE,kBAAC,IAAD,KACE,kBAACkG,EAAA,EAAD,CAAgBC,aAAW,GACzB,kBAACC,EAAA,EAAD,CAAe9G,MAAOjB,GACpB,kBAAC,EAAD,MADF,IACU,kBAACgI,EAAA,EAAD,YCZlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACP,EAAD,OAEFQ,SAASC,eAAe,STiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,mBUjJ5BC,EAAOC,QAAU,IAA0B,2C","file":"static/js/main.614b7f17.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { blue } from \"@material-ui/core/colors\";\nimport responsiveFontSizes from \"@material-ui/core/styles/responsiveFontSizes\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\n\nconst COLOR1 = \"#0D0D0D\"; // dark gray\nconst COLOR2 = \"#6ec6d8\"; // bluish\nconst COLOR3 = \"#03FCF5\"; // bright bluish- Tetra\n\n// const PRIMARY_TEXT = '#dbdbdb';\nconst PRIMARY_TEXT = \"#dbdbdb\";\nconst SECONDARY_TEXT = \"#7B7B7B\";\n\nexport const HEADER_HEIGHT_REM = 6;\n\nexport const baseTheme = responsiveFontSizes(\n  createMuiTheme({\n    palette: {\n      // type: \"dark\",\n      primary: { main: \"#09142c\" },\n      secondary: { main: \"#00A1CB\" },\n      background: {\n        // default: \"#0a0f25\",\n        // paper: \"#192a45\",\n        // paper: \"#09142c\",\n      },\n    },\n    typography: {\n      // fontFamily: 'Montserrat',\n    },\n    overrides: {\n      MuiPaper: {\n        root: {\n          // backgroundColor: COLOR1,\n        },\n      },\n      MuiTypography: {\n        colorPrimary: {\n          // color: PRIMARY_TEXT,\n        },\n      },\n      MuiLink: {\n        root: {\n          // color: blue[500],\n        },\n      },\n    },\n  })\n);\n\nexport const AppStyles = {};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    height: \"100%\",\n    width: \"fit-content\",\n    maxWidth: \"100%\",\n    boxSizing: \"border-box\",\n    paddingBottom: \"2em\",\n  },\n}));\n\nexport const Page = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { children } = props;\n  return <div className={classes.page}>{children}</div>;\n});\n","import React, { DetailedHTMLProps } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {}\nconst useStyles = makeStyles((theme) => ({\n  contentFitter: {\n    height: \"100%\",\n    width: \"fit-content\",\n    maxWidth: \"100%\",\n  },\n}));\n\nexport const ContentFitting = React.memo<\n  IProps &\n    DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\n>((props) => {\n  const classes = useStyles();\n  const { children, ...others } = props;\n  return (\n    <div className={classes.contentFitter} {...others}>\n      {children}\n    </div>\n  );\n});\n","import React, { useCallback, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Button,\n  InputAdornment,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green, red } from \"@material-ui/core/colors\";\n\ninterface IProps {}\n\ntype TFormData = {\n  herdSize: string;\n  mastitisPrevalenceValue: string;\n  cullinRate: string;\n  // In NIS\n  rawMilkPrice: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      // color: \"#f5f5f5\",\n    },\n  },\n  actionButton: {\n    transition: \"background-color 0.2s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n}));\n\nconst DEFAULT_MASTITIS_PREVALENCE_VALUE = 51.7;\nconst DEFAULT_CULLING_RATE = 5;\nconst DEFAULT_RAW_MILK_PRICE = 2;\n\nexport const CalculatorForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm<TFormData>();\n\n  const [hasResult, setHasResult] = useState(false);\n  const [result, setResult] = useState(0);\n\n  const calculatedSavings = useCallback((formData: TFormData) => {\n    // Parse to int\n    const cullinRate = parseInt(formData.cullinRate);\n    const herdSize = parseInt(formData.herdSize);\n    const mastitisPrevalenceValue = parseInt(formData.mastitisPrevalenceValue);\n    const rawMilkPrice = parseInt(formData.rawMilkPrice);\n\n    // Calculate\n    const infectedCows = Math.round((mastitisPrevalenceValue / 100) * herdSize);\n    const culledCows = Math.round((cullinRate / 100) * herdSize);\n    const litersLostToInfection = infectedCows * 3.4 * 150;\n    const potentialLose = litersLostToInfection * rawMilkPrice;\n    const totalCull = culledCows * 8000;\n    const totalLoss = totalCull + potentialLose;\n    const applicatorsNeeded = Math.round(infectedCows / 60);\n    const totalApplicatorsCost = applicatorsNeeded * 9000;\n    const totalFarmerInvestment = totalApplicatorsCost + 50000;\n    const reductionOfLosses = totalLoss * 0.7;\n    const newTotalLoss = totalLoss - reductionOfLosses + totalFarmerInvestment;\n\n    const savings = totalLoss - newTotalLoss;\n\n    return savings;\n  }, []);\n\n  const submit = useCallback(\n    (formData: TFormData) => {\n      const calculatedResult = calculatedSavings(formData);\n\n      setHasResult(true);\n      setResult(calculatedResult);\n    },\n    [calculatedSavings]\n  );\n\n  const farmerWillSaveMoney = result > 0;\n\n  return (\n    <>\n      <form\n        onSubmit={handleSubmit((fomData) => submit(fomData))}\n        style={{\n          maxWidth: \"100%\",\n          // width: \"100%\",\n          width: \"60ch\",\n        }}\n      >\n        {/* Herd Size */}\n        <TextField\n          autoComplete={\"off\"}\n          InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n          name={\"herdSize\"}\n          label={\"Size of herd\"}\n          title={\"Cattle heads in your herd\"}\n          variant={\"outlined\"}\n          type={\"number\"}\n          required\n          inputRef={register}\n          fullWidth\n          className={classes.textField}\n        />\n        <br />\n        <br />\n\n        {/* Mastitis prevalence value */}\n        <TextField\n          autoComplete={\"off\"}\n          InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n          name={\"mastitisPrevalenceValue\"}\n          label={\"Mastitis prevalence value\"}\n          title={\"Mastitis prevalence value\"}\n          variant={\"outlined\"}\n          type={\"number\"}\n          defaultValue={DEFAULT_MASTITIS_PREVALENCE_VALUE}\n          required\n          inputRef={register}\n          fullWidth\n          className={classes.textField}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n          }}\n        />\n        <br />\n        <br />\n\n        {/*Culling rate*/}\n        <TextField\n          autoComplete={\"off\"}\n          InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n          name={\"cullinRate\"}\n          label={\"Culling rate\"}\n          title={\"Culling rate\"}\n          variant={\"outlined\"}\n          type={\"number\"}\n          defaultValue={DEFAULT_CULLING_RATE}\n          required\n          inputRef={register}\n          fullWidth\n          className={classes.textField}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n          }}\n        />\n        <br />\n        <br />\n\n        {/*Raw milk price (in NIS) */}\n        <TextField\n          autoComplete={\"off\"}\n          InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n          name={\"rawMilkPrice\"}\n          label={\"NIS/liter Milk ratio\"}\n          title={\"NIS/liter Milk ratio\"}\n          variant={\"outlined\"}\n          type={\"number\"}\n          defaultValue={DEFAULT_RAW_MILK_PRICE}\n          required\n          inputRef={register}\n          fullWidth\n          className={classes.textField}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">₪</InputAdornment>,\n          }}\n        />\n        <br />\n        <br />\n\n        {/* Submit */}\n        <Button\n          className={classes.actionButton}\n          variant={\"outlined\"}\n          fullWidth\n          type={\"submit\"}\n        >\n          Calculate Savings\n        </Button>\n\n        {hasResult && (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <br />\n            <br />\n            <Typography variant={\"h4\"} color={\"secondary\"}>\n              Estimated savings :\n            </Typography>\n            <Typography\n              variant={\"h4\"}\n              style={{ color: farmerWillSaveMoney ? green[400] : red[400] }}\n            >\n              ₪ {result.toLocaleString()}\n            </Typography>\n          </div>\n        )}\n      </form>\n    </>\n  );\n});\n","import React from \"react\";\nimport { Page } from \"../components/structure/Page\";\nimport { ContentFitting } from \"../components/structure/ContentFitting\";\nimport { CalculatorForm } from \"../components/forms/CalculatorForm\";\nimport { Typography } from \"@material-ui/core\";\n\ninterface IProps {}\n\nexport const CalculatorPage = React.memo<IProps>((props) => {\n  return (\n    <Page>\n      <ContentFitting\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography\n          variant={\"h4\"}\n          color={\"secondary\"}\n          style={{ fontWeight: \"bold\" }}\n        >\n          Calculate your savings\n        </Typography>\n        <br />\n        <CalculatorForm />\n      </ContentFitting>\n    </Page>\n  );\n});\n","import React from \"react\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { HEADER_HEIGHT_REM } from \"../../theme/Theme\";\nimport { NavLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Logo from \"../../assets/armenta_logo.jpeg\";\n\ninterface IProps {}\n\nexport const HOVER_COLOR = \"#00A1CB\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: \"#fff\",\n    height: `${HEADER_HEIGHT_REM}rem`,\n    paddingTop: \"0.5rem\",\n    paddingBottom: \"0.5rem\",\n    boxSizing: \"border-box\",\n    // height: `${HEADER_HEIGHT_REM}rem`,\n    zIndex: theme.zIndex.drawer + 1,\n    // padding: `${theme.spacing(2)}px ${theme.spacing(8)}px`,\n    padding: theme.spacing(1),\n  },\n  toolbar: {\n    paddingRight: 0,\n    paddingLeft: 0,\n    // marginRight: 'auto',\n    // marginLeft: 'auto',\n    margin: \"auto\",\n    width: \"90%\",\n    maxWidth: \"90%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    justifyItems: \"center\",\n  },\n  logo: {\n    // width: \"13rem\",\n    width: \"calc(min(15rem, 80%))\",\n  },\n  link: {\n    color: \"#2B2B2B\", // DEV_NOTE : Taken from armenta\n    marginLeft: 30,\n    transition: \"color 0.4s ease-in-out\",\n    \"&:hover\": {\n      color: HOVER_COLOR,\n    },\n  },\n}));\n\nexport const Header = React.memo<IProps>((props) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" data-testid=\"header\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <NavLink\n          to=\"/\"\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        >\n          <img className={classes.logo} src={Logo} alt=\"Armenta\" />\n          {/*<Link*/}\n          {/*  // @ts-ignore*/}\n          {/*  component={NavLink}*/}\n          {/*  exact={true}*/}\n          {/*  className={classes.link}*/}\n          {/*  // activeStyle={{ color: HOVER_COLOR }}*/}\n          {/*  underline=\"none\"*/}\n          {/*  to={\"/\"}*/}\n          {/*  variant=\"h6\"*/}\n          {/*  noWrap*/}\n          {/*>*/}\n          {/*  Armenta*/}\n          {/*</Link>*/}\n        </NavLink>\n      </Toolbar>\n    </AppBar>\n  );\n});\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { HEADER_HEIGHT_REM } from \"./theme/Theme\";\nimport { CalculatorPage } from \"./pages/CalculatorPage\";\nimport { Header } from \"./components/header/Header\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainWrapper: {\n    // minHeight: `calc(100% - ${HEADER_HEIGHT_REM}rem)`,\n    minHeight: `calc(100% - ${HEADER_HEIGHT_REM}rem)`,\n\n    // Center the content\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  appMain: {\n    height: \"100%\",\n    maxWidth: \"90%\",\n    boxSizing: \"border-box\",\n    padding: theme.spacing(2),\n  },\n\n  headerSeparator: {\n    height: `${HEADER_HEIGHT_REM}rem`,\n  },\n}));\n\nconst App = React.memo(() => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Header />\n      <div className={classes.headerSeparator} />\n      <div className={classes.mainWrapper}>\n        <main className={classes.appMain}>\n          <CalculatorPage />\n        </main>\n      </div>\n    </>\n  );\n});\n\nexport default App;\n","import React from \"react\";\nimport App from \"./App\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport {\n  makeStyles,\n  StylesProvider,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport { baseTheme } from \"./theme/Theme\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\ninterface IProps {}\n\nexport const AppWrapper = React.memo<IProps>((props) => {\n  return (\n    <Router>\n      <StylesProvider injectFirst>\n        <ThemeProvider theme={baseTheme}>\n          <App /> <CssBaseline />\n        </ThemeProvider>\n      </StylesProvider>\n    </Router>\n  );\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {AppWrapper} from \"./AppWrapper\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWrapper />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/armenta_logo.2465901b.jpeg\";"],"sourceRoot":""}